rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /people/{personID} {
      allow read: if request.auth != null
        && (request.auth.uid == personID || request.auth.token.isManager == true);
      allow update, delete: if request.auth != null
        && (request.auth.uid == personID || request.auth.token.isManager == true
          && (request.auth.uid == resource.data.manager_id || request.auth.uid == request.resource.data.manager_id));
    }
    
    match /parking_lots/{lotID} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.token.isManager == true
        && request.auth.uid == request.resource.data.manager_id;
      allow update, delete: if request.auth != null && request.auth.token.isManager == true
        && request.auth.uid == resource.data.manager_id;
    }
    
    match /parking_spots/{lotID} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.isManager == true
        && request.auth.uid == get(/databases/$(database)/documents/parking_lots/$(request.resource.data.lot_id)).data.manager_id;
    }
  }
}